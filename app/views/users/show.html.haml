%p= link_to "New Cast", new_cast_path, class: "btn btn-inverse new-cast-button"
%p= link_to "New Group", new_group_path, class: "btn btn-inverse new-group-button"
%p= link_to "New Subscription", new_subscription_path, class: "btn btn-inverse new-group-button"
:javascript

    //Holder variables
    var markers = [];
    var infoWindows = [];
    var mapArr = [];

    //Create marker icon
    function createIcon(pinColor){
        var pinImage = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColor,
        new google.maps.Size(21, 34),
        new google.maps.Point(0,0),
        new google.maps.Point(10, 34));
        return pinImage;
    }

    //Marker functions
    function populateMarker(position,map,infowindow,title,color) {
        var pinImage = createIcon(color);
        var marker = new google.maps.Marker({
          position: position,
          map: map,
          icon: pinImage,
          animation: google.maps.Animation.DROP
        });
        map.panTo(position);
        google.maps.event.addListener(marker, 'click', function() {
          closeAllInfoWindows();
          infowindow.open(map,marker);
        });
        markers.push(marker);
    }
    function deleteMarker(cast_id){
        $.ajax({
          url: "/casts/" + cast_id,
          type: "post",
          dataType: "json",
          data: {"_method":"delete"}
        });
    }
    function removeAllMarkersFromMap(){
        for(var i=0;i<markers.length;i++){
            markers[i].setMap(null);
            markers[i] = null;
        }
        markers = [];
    }
    function closeAllInfoWindows() {
        for (var i=0;i<infoWindows.length;i++) {
          infoWindows[i].close();
        }
    }

    function findDaysLeft(expiration){
        var now = new Date();
        var exp = Date.parse(expiration);
        var daysleft = ((exp - now)/1000)*(1/86400);
        return daysleft;
    }

    function findMarkerColor(expiration){
        var daysleft = findDaysLeft(expiration);
        var color;
        if(daysleft<0){
            color = 'expired'
        }else if(daysleft<0.05){
            color = 'FA334F'
        }else if(daysleft<1){
            color = 'FFD700'
        }else if(daysleft<7){
            color = '96D72D'
        }else if(daysleft<30){
            color = '323299'
        }else if(daysleft<365){
            color = '70018B'
        }
        return color;
    }

    function populateMarkers(path,map){
        $.getJSON(path,function(data) {
          removeAllMarkersFromMap();
          var lastCast = data[data.length-1];
          //loop through all owned markers and append
          $.each(data,function(index,cast){
            //determine latLng
            var latLng = new google.maps.LatLng(cast.lat,cast.lon);
            //add content to each infowindow
            var contentString = '<div class="castPopup '+cast.id+'Popup">'+
                    '<p class=castTitle '+cast.id+'Title>'+cast.title+'</p>'+
                    '<p class=castContent '+cast.id+'Content>'+cast.content+'</p>'+
                    "<p class=castExpiration "+cast.id+"Expiration>"+parseFloat(findDaysLeft(cast.expiration)).toFixed(2)+" Days Left</p>"
                    '</div>'
            var infowindow = new google.maps.InfoWindow({
                content: contentString
            });
            //populate variable array for reference
            infoWindows.push(infowindow);
            //attach markers and info windows to map
            var color = findMarkerColor(cast.expiration);
            if(color==='expired'){
                deleteMarker(cast.id);
            }else{
                populateMarker(latLng,map,infowindow,cast.title,color);
            }
          });
      })
    }

    function populateSubscribedGroups(){
        $.getJSON("#{user_groups_path(@user)}",function(data) {
            $.each(data,function(index,group){
                var elem = $('<div class="groupContainer" data-uuid="'+group.id+'"><p class="groupName">'+
                group.name+'</p></div>')
                $('.groupsContainer').append(elem);
            });
        });
    }

    function initialize() {
      if(!($('#map').length)){return}
      //insert rails variables here
      var mapOptions = {
        center: { lat: parseFloat(-25.363882), lng: parseFloat(131.044922)},
        zoom: 8,
        disableDefaultUI: true
      };
      var map = new google.maps.Map(document.getElementById('map'),
        mapOptions);
      mapArr.push(map);
      populateMarkers("#{user_casts_path(@user)}",map)
      populateSubscribedGroups();
      $('.groupsContainer').click('.groupContainer',function(e){
        if($(e.target).attr('data-uuid')){
            var groupName = $(e.target).children()[0].innerHTML;
            $('#circleHeader').text(groupName+" Circle");
            populateMarkers("#{root_url}/groups/"+$(e.target).attr('data-uuid')+"/casts.json",mapArr[0]);
        }
      })
    }
    google.maps.event.addDomListener(window, 'load', initialize);


%h2#circleHeader #{@user.name}'s Circle
%div
    #map
.groupsContainer


