%p.newCastHeader New Cast
= simple_form_for @cast, :html => {:multipart => true} do |f|
  .newCastContentContainer
    .newCastAttrContainer
      %p.newCastAttrHeader Attributes
      = f.input :title, :input_html => {:class => 'newCastTitle'}
      = f.input :expiration, as: :string, :input_html => {:class => 'datetimePicker'}
      = f.input :content, :input_html => {:class => 'newCastContent'}
      = f.input :lat, :as => :hidden
      = f.input :lon, :as => :hidden
      = f.input :time_offset, :as => :hidden
    .newCastGroupsContainer
      = f.association :groups, as: :check_boxes, :input_html => {:class => 'newCastGroups'}
    - if @cast.valid?
      = f.button :submit, "Cast Message"
    - else
      .newCastLocationContainer
        .searchPlaceCastContainer
          %input.searchPlaceCastInput
          %button#searchPlaceCast{:type => "button"} Search
        %p.newCastLocationHeader Location
        %p Choose a Location for this message by clicking somewhere on the map below or clicking 'Set Current Location'
        #placeCastMap
        %button#setCurrentLocation{:type => "button"} Set Current Location
        %button#setChosenLocation.hidden Save Cast

:javascript

  function initialize() {

    if(!($('#placeCastMap').length)){return}

    function populateTimeOffset(lat,lon){
      var url = "https://maps.googleapis.com/maps/api/timezone/json?location="+lat+","+lon+"&timestamp=#{Time.now.to_i}&key=#{ENV['GMAPS_ACCESS_KEY']}"
      $.get(url,function(data){
        $('#cast_time_offset').val((data.rawOffset+data.dstOffset)*(1/3600));
      })
    }

    var markers = [];

    //create jquery-ui datetime picker
    $('.datetimePicker').datetimepicker({
      // inline:true
    });

    $('.newCastAttrHeader').click(function(){
      console.log($('.datetimePicker').val());
    })

    //set hidden field values for rails
    function setLatLng(position){
      $('#cast_lat').val(position.A);
      $('#cast_lon').val(position.F);
    }

    var userLat = parseFloat("#{current_user.home_lat}")
    var userLon = parseFloat("#{current_user.home_lon}")
    //place cast map
    var placeMapOptions = {
      center: { lat: userLat, lng: userLon},
      zoom: 9,
      disableDefaultUI: true
    };
    function placeMarker(position, map) {
      $('#setChosenLocation').removeClass('hidden');
      populateTimeOffset(position.A,position.F);
      if(markers.length>0){
        for(i=0;i<markers.length;i++){
          markers[i].setMap(null);
          markers[i] = null;
          markers = [];
        }
      }
      var marker = new google.maps.Marker({
        position: position,
        map: map,
        animation: google.maps.Animation.DROP
      });
      markers.push(marker);
      map.panTo(position);
      setLatLng(position);
    }
    var placeMap = new google.maps.Map(document.getElementById('placeCastMap'),
        placeMapOptions);

    function getLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
      } else {
        alert("Geolocation is not supported by this browser.");
      }
    }

    function showPosition(position) {
      var lat = position.coords.latitude;
      var lng = position.coords.longitude;
      var pos = new google.maps.LatLng(lat, lng);
      placeMarker(pos,placeMap);
      placeMap.setCenter(new google.maps.LatLng(lat, lng));
      placeMap.setZoom(10);
    }

    $('#setCurrentLocation').click(function(){
      getLocation();
    })

    //Search Location
    function searchCastPlace(val){
        var loc = placeMap.getCenter();
        var request = {
            location: loc,
            radius: '500',
            query: val
        };
        service = new google.maps.places.PlacesService(placeMap);
        service.textSearch(request, callback);

        function callback(results,status){
            if (status == google.maps.places.PlacesServiceStatus.OK) {
                placeMap.setCenter(results[0].geometry.location);
                placeMap.setZoom(18);
            }
        }
    }

    $('#searchPlaceCast').click(function(){
      var searchVal = $('.searchPlaceCastInput').val();
      searchCastPlace(searchVal)
    })

    google.maps.event.addListener(placeMap, 'click', function(e) {
      placeMarker(e.latLng, placeMap);
    });
  }

  google.maps.event.addDomListener(window, 'load', initialize);